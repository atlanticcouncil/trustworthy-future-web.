// =============================================================================
// String Replace
// =============================================================================

@mixin breakpoint($device_or_width) {
  @if $device_or_width == small {
    @media (min-width: 576px) {
      @content;
    }
  } @else if $device_or_width == medium {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $device_or_width == large {
    @media (min-width: 992px) {
      @content;
    }
  } @else if $device_or_width == extra-large {
    @media (min-width: 1200px) {
      @content;
    }
  } @else {
    @media (min-width: $device_or_width) {
      @content;
    }
  }
}


@mixin breakpointBetween($from, $to) {
  @media (min-width: $from) and (max-width: $to) {
    @content;
  }
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

$base-font-size: 16px;
@function rem($pixels, $context: $base-font-size) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1rem;
}